# Generated by Django 3.1.4 on 2020-12-28 21:47

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models
import usuarios.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Obrigatório', max_length=100, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Obrigatório', max_length=100, verbose_name='Nome')),
                ('sigla', models.CharField(max_length=5, verbose_name='Sigla')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
            },
        ),
        migrations.CreateModel(
            name='Telefone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numeroCelular', models.CharField(help_text='Obrigatório', max_length=30, verbose_name='Telefone celular')),
                ('numeroFixo', models.CharField(blank=True, help_text='Não obrigatório', max_length=30, verbose_name='Telefone fixo')),
            ],
            options={
                'verbose_name': 'Telefone',
                'verbose_name_plural': 'Telefones',
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complemento', models.CharField(blank=True, help_text='Obrigatório', max_length=50, verbose_name='Complemento')),
                ('numero', models.CharField(default='S/N', max_length=100, verbose_name='Número')),
                ('rua', models.CharField(help_text='Obrigatório', max_length=100, verbose_name='Rua')),
                ('cep', models.CharField(help_text='Obrigatório', max_length=25, verbose_name='CEP')),
                ('cidade', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='usuarios.cidade')),
                ('estado', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='usuarios.estado')),
            ],
        ),
        migrations.AddField(
            model_name='cidade',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='usuarios.estado'),
        ),
        migrations.CreateModel(
            name='CustomUsuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(help_text='Obrigatório', max_length=100, verbose_name='Primeiro nome')),
                ('last_name', models.CharField(help_text='Obrigatório', max_length=100, verbose_name='Último nome')),
                ('email', models.EmailField(help_text='Obrigatório', max_length=254, unique=True, verbose_name='E-mail')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Membro da equipe')),
                ('cpf', models.CharField(help_text='Obrigatório', max_length=11, unique=True, verbose_name='CPF')),
                ('data_nascimento', models.DateField(help_text='Obrigatório', verbose_name='Data de nascimento')),
                ('foto', stdimage.models.StdImageField(upload_to=usuarios.models.get_file_path, verbose_name='Foto')),
                ('endereco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Endereço', to='usuarios.endereco')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('telefone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telefone', to='usuarios.telefone')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', usuarios.models.UsuarioManager()),
            ],
        ),
    ]
